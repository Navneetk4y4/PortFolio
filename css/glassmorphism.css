:root {
    --black: #0a0a12;
    --dark-grey: #121220;
    --medium-grey: #1a1a2e;
    --glossy-green: #00ffaa;
    --glossy-blue: #00aaff;
    --glossy-purple: #aa00ff;
    --light-text: #f0f0ff;
    --glass-bg: rgba(20, 20, 40, 0.3);
    --glass-border: rgba(255, 255, 255, 0.15);
    
    /* Gradient backgrounds */
    --gradient-1: linear-gradient(135deg, #0a0a12 0%, #1a1a2e 100%);
    --gradient-2: radial-gradient(circle at 20% 30%, rgba(0, 170, 255, 0.1) 0%, transparent 30%),
                 radial-gradient(circle at 80% 70%, rgba(170, 0, 255, 0.1) 0%, transparent 30%);
}

/* Glass morphism effect */
.glass {
    background: var(--glass-bg);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    border: 1px solid var(--glass-border);
    box-shadow: 
        0 8px 32px 0 rgba(0, 0, 0, 0.3),
        inset 0 0 12px rgba(0, 255, 170, 0.1);
    border-radius: 12px;
    padding: 2.5rem;
    margin-bottom: 2rem;
    transition: all 0.4s ease;
    position: relative;
    overflow: hidden;
}

.glass::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        to bottom right,
        rgba(0, 255, 170, 0) 0%,
        rgba(0, 255, 170, 0.1) 50%,
        rgba(0, 255, 170, 0) 100%
    );
    transform: rotate(30deg);
    transition: all 0.6s ease;
    opacity: 0;
}

.glass:hover::before {
    animation: glassGlow 2s ease infinite;
    opacity: 1;
}

@keyframes glassGlow {
    0% { transform: rotate(30deg) translate(-30%, -30%); }
    50% { transform: rotate(30deg) translate(10%, 10%); }
    100% { transform: rotate(30deg) translate(-30%, -30%); }
}

/* Cyber elements */
.cyber-circle {
    position: fixed;
    border-radius: 50%;
    border: 1px solid rgba(0, 255, 170, 0.3);
    z-index: -1;
    animation: float 15s infinite ease-in-out;
}

.circle-1 {
    width: 300px;
    height: 300px;
    top: -150px;
    right: -150px;
}

.circle-2 {
    width: 150px;
    height: 150px;
    bottom: 100px;
    left: -75px;
    animation: float 12s infinite ease-in-out reverse;
}

.circle-3 {
    width: 200px;
    height: 200px;
    top: 50%;
    right: -100px;
    animation: float 18s infinite ease-in-out;
}

@keyframes float {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(5deg); }
}

/* Terminal styling */
.terminal {
    position: relative;
    overflow: hidden;
    padding: 2rem;
    margin: 2rem 0;
}

.terminal::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        135deg,
        rgba(0, 255, 170, 0.1) 0%,
        rgba(0, 255, 170, 0) 50%,
        rgba(0, 255, 170, 0.1) 100%
    );
    z-index: -1;
}

.terminal-header {
    display: flex;
    margin-bottom: 1.5rem;
}

.terminal-btn {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 8px;
}

.terminal-btn.red { background: #ff5f56; }
.terminal-btn.yellow { background: #ffbd2e; }
.terminal-btn.green { background: #27c93f; }

.terminal-content {
    font-family: 'Fira Code', monospace;
    line-height: 1.8;
}

.terminal-content p:last-child::after {
    content: '_';
    animation: blink 1s step-end infinite;
    color: var(--glossy-green);
}

@keyframes blink {
    from, to { opacity: 0; }
    50% { opacity: 1; }
}

/* Glossy green text */
.glossy-green {
    color: var(--glossy-green);
    text-shadow: 0 0 10px rgba(0, 255, 170, 0.3);
}

/* Skill cards padding */
.skill-category {
    padding: 2rem 1.5rem;
}

/* Certification cards (holographic) */
.cert-card {
    position: relative;
    overflow: hidden;
    transition: all 0.4s ease;
    padding: 2rem;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    perspective: 1000px;
}

/* Certification card inner wrapper for 3D transform */
.cert-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.6s;
    transform-style: preserve-3d;
}

.cert-card:hover .cert-card-inner {
    transform: rotateY(15deg);
}

/* Certification logo */
.cert-logo {
    width: 200px;
    height: 200px;
    object-fit: contain;
    margin-bottom: 1.5rem;
    transition: all 0.5s ease;
    filter: drop-shadow(0 0 5px rgba(0, 255, 170, 0.5));
    position: relative;
    z-index: 2;
}

.cert-card:hover .cert-logo {
    transform: scale(1.1) translateZ(20px);
    filter: drop-shadow(0 0 15px rgba(0, 255, 170, 0.8));
}

/* Hologram overlay */
.cert-hologram {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        135deg,
        rgba(0, 255, 170, 0.1) 0%,
        rgba(0, 170, 255, 0.1) 50%,
        rgba(170, 0, 255, 0.1) 100%
    );
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: 1;
}

.cert-card:hover .cert-hologram {
    opacity: 1;
    animation: hologramPulse 3s ease infinite;
}

@keyframes hologramPulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 0.6; }
}

/* Certification card title underline animation */
.cert-card h3 {
    margin: 1rem 0;
    position: relative;
    display: inline-block;
}

.cert-card h3::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 2px;
    background: var(--glossy-green);
    transition: width 0.3s ease;
}

.cert-card:hover h3::after {
    width: 80%;
}

/* Certification description opacity */
.cert-card p {
    opacity: 0.9;
    transition: all 0.3s ease;
}

.cert-card:hover p {
    opacity: 1;
}

/* Certification Grid Layout */
.certifications-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2.5rem;
    margin-top: 2rem;
}
